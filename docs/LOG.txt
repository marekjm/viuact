
                        VIUACT COMPILER DEVELOPMENT LOG

--------------------------------------------------------------------------------

This file describes the history of, and events that occured during, the Viuact
compiler development.

On every day when something related to the project is done, a relevant entry is
made in this file. An example entry looks like this:

>   TITLE OF THE ENTRY
>   (2018-12-22 16:29)
>
>   Contents of the entry.

Contents of each entry may be short (e.g. "A new issue was added."), or long
(e.g. a description of how a problem was resolved, or summary of a discussion).

--------------------------------------------------------------------------------

FIX BRANCH NAME GENERATION
(2019-01-02 21:53)

I fixed a bug that caused infinite loops in code with if expressions. If
branches that had the same body were assigned the same ID, which caused jumps to
be calculated wrongly and under specific conditions caused infinite loops to be
generated.

Viua VM assembler must be fixed to disallow reusing names of branches in the
same code block.

--------------------------------------------------------------------------------

BASIC SUPPORT DYNAMIC IMPORTS ON VIUA VM SIDE
(2018-12-30 10:35)

Information about dynamic imports is now stored inside bytecode modules (both
linkable and executable). It is reported by the loader to the kernel during
program startup; the kernel then invokes the module loading routine for the
requested module.

This means that manually setting the VIUAPRELINK environment variable is no
longer necessary.

One limitation of current implementation is that dynamic imports of dynamic
imports are resolved at compile time instead of at run time. This means that
even if there is a newer version of a module that is dynamically imported its
dependencies will be imported as if the older version was run.

--------------------------------------------------------------------------------

CHANGES IN MODULE IMPLEMENTATION ON VIUA VM SIDE
(2018-12-28 14:56)

Viua VM was using a ".vlib" extension for files containing modules (linkable
bytecode). Now, to accommodate Viuact, the extension was changed to ".module".
Commit 89889b5acbc79f1d4d5c023669f775fdef539f30 introduces the change.

Static imports work on Viua VM side. A module (or an executable) can request
that another module be statically linked to it by using the ".import:"
directive with "static" attribute:

    .import: [[static]] A_module

This will make the linker look for "A_module.module" file, and statically link
it to the current "main" module.

There is also basic support for dynamic imports, but it is not finished yet.
You can specify a dynamic link using the ".import:" directive with "dynamic"
attribute...

    .import: [[dynamic]] A_module

...and it will pass the verification stage, but there will be nothing in the
assembled module that will tell the runtime linker to look for a module and
link it. You will have to use the "VIUAPRELINK" environment variable to
instruct the VM to link required modules before invoking the main function of
the loaded executable:

    $ VIUAPRELINK=A_module viua-vm ./a.out

--------------------------------------------------------------------------------

FIRST ENTRY
(2018-12-22 16:31)

The log file was established. It will be maintained as a log of what happened
during Viuact development, when, and why. I decided to start writing it after
a discussion with Krzysztof - we came to the conclusion (which was put forward
by Krzysztof) that *whatever* is done that has its root cause in the Viuact
project should be documented. This way we will be able to put the entire
history of the project and its supporting work inside the final "paper" (or
whatever it will be called).
