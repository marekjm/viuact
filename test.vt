(enum option (
    None
    (Some 'a)
))

; (val ('a) print_option ((('a) option)) -> void)
; (let print_option (x) (match x (
;     (with None (print "none"))
;     (with Some x' (print x')))))

(val ('a) print_stuff ('a) -> 'a)
(let print_stuff (x) (print x))

(val ('a) map (
    (('a) option)
    (('a) -> 'a)
) -> (('a) option))
(let map (x fn) (match x (
    (with None { (print "nothing") (option::None) })
    ; (with Some x' (option::Some (fn x')))
    ; (with Some x' x') ; FIXME compiler crashes on this
    (with _ { (print "something") (option::None) })
)))

(val main () -> i8)
(let main () {
    (let n (option::None))
    (let s (option::Some 42))

    ; (print_option n)
    (map n print_stuff)
    (map s print_stuff)

    0
})
